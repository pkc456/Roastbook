//
//  MirrorContentItem.swift
//  Roastbook
//
//  Created by Pardeep on 27/04/17.
//  Copyright Â© 2017 Programming crew. All rights reserved.
//
//  -- auto-generated by JSON2Swift --
//

import Foundation


struct MirrorContentItem {
    var percentage: Int
    var name: String
    var email: String
    var id: Int
    var imagePath: String
    var createdAt: Int


    init?(json: [String: Any]?) {
        guard let json = json else {return nil}
        percentage = json["percentage"] as? Int ?? 0
        name = json["name"] as? String ?? ""
        email = json["email"] as? String ?? ""
        id = json["id"] as? Int ?? 0
        imagePath = json["imagePath"] as? String ?? ""
        createdAt = json["createdAt"] as? Int ?? 0
    }



    init() {
        self.init(json: [:])!
    }



    init?(data: Data?) {
        guard let data = data else {return nil}
        guard let json = (try? JSONSerialization.jsonObject(with: data, options: [])) as? [String: Any] else {return nil}
        self.init(json: json)
    }



    init(percentage: Int, name: String, email: String, id: Int, imagePath: String, createdAt: Int) {
        self.percentage = percentage
        self.name = name
        self.email = email
        self.id = id
        self.imagePath = imagePath
        self.createdAt = createdAt
    }



    /// This function generate a json dictionary from the model.
    ///
    /// - Parameter useOriginalJsonKey: This parameter take effect only when you have modified a property's name making it different to the original json key. If true, the original json key will be used when generate json dictionary, otherwise, the modified property name will be used as key in the dictionary.
    func jsonDictionary(useOriginalJsonKey: Bool) -> [String: Any] {
        var dict: [String: Any] = [:]
        dict["percentage"] = percentage
        dict["name"] = name
        dict["email"] = email
        dict["id"] = id
        dict["imagePath"] = imagePath
        dict["createdAt"] = createdAt
        return dict
    }



}



